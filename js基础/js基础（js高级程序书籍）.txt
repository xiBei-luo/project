08-01



08-02
  1、引用类型（类）与对象。js中没有“类”这个概念，因此js中的引用类型相当于真正面向对象编程语言中的类；
     引用类型：具有相同特性和行为的对象就是引用类型（类）；对象的抽象就是引用类型，引用类型的具体化就是对象；
  2、引用类型和类相当于模具和铸件的关系；
  3、js中的引用类型主要包括：Object，Array，Date，Function，RegExp；
  4、函数名实际上只是指向函数的指针而已。函数名后面加上括号表示调用并执行函数，不加括号相当于将指向函数的指针赋值给另一个变量；
  5、js中的RegExp对象由表达式和标志组成；标志包括g,i,m
*由于翻译等因素影响，本人认为在《javascript高级程序设计中》的类型和对象是一个概念。
  6、栈和堆。栈（stack）：执行一个方法时自动生成的，变量存放在栈中，变量调用结束后会自动销毁。基础变量的值存储在栈中。
            堆(heap)：当程序创建一个新对象时，会将这个对象放到堆内存中，堆内存中的对象不会自动销毁。引用变量存储在栈中，
存储的是指向堆中的数组或者对象的地址（因此修改引用类型总会影响到其他指向这个地址的引用变量）。
  7、RegExp：
08-03
  1、toString()  toLocalString()  valueOf()
    使用方法  arr（数组名）.tostring();
    所有对象都具有这三种方法;
    调用数组的toString()和valueOf()会返回相同的值，即数组中各项值以逗号形式分隔；实际上直接alert(arr)，alert接收字符串，
程序会在后台隐式调用toString方法;
    toLocalString()是对数组中的每一项都执行toLocalString()方法，toString()和valueOf()是直接对整个数组执行相应的方法;
08-04
  1、字符串类型：
	（1）字符方法：
		根据索引值，返回相应索引位置上的字符
		chaAt(索引)
		charCodeAt(索引)―>返回字符编码；
	（2）字符串操作方法：
		基于字符串返回新的子字符串
		slice(3，7) 从位置3开始检索，到第7个字符位置结束 
		substr(3，7)  从位置3开始检索，返回3个字符
		substring(3，7)  从位置3开始检索，到第7个字符位置结束
	（3）字符串位置方法：
		返回字符串的位置，没有找到则返回-1；返回的位置都是正序数的位置
		strValue.indexOf("a",3)从字符串变量strValue中正序寻找字符a，从第3个位置开始检索
		strValue.lastIndexOf("a",3)从字符串变量strValue中倒序寻找字符a，从倒数第3个位置开始检索
	（4）trim()方法：创建一个字符串的副本，删除前置和后置的空格，不包括中间的;
	（5）字符串大小写转换：toLowerCase();toUpperCase()
  2、eval():
	通过eval()执行的代码可以引用在环境定义之外的变量
	eval()内置函数或变量可以被外部直接访问（全局？）
  3、面向对象编程:
	（1）属性类型：数据属性；访问器属性
	（2）定义属性：
	（3）读取属性:
	（4）创建对象：
		构造函数方式；
		工厂方式；
		原型方式：
	（5）原型











